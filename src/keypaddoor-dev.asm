CSEG AT 0h
AJMP INIT
CSEG AT 100h

ORG 20h
INIT:	MOV R0, #0H
	MOV R1, #0H
	MOV R2, #0H
	MOV R3, #0H
	MOV R4, #0H
	MOV R5, #0H
	MOV A, #0H
	CALL INIT_DISPLAY

CHECK_INPUT:     		MOV DPTR, #DB_KEYPAD
		 		MOV R1, #0b		; for (int i = 0; ... ) -> Counter
CHECK_INPUT_LOOP_START:		MOV R0, P0		;
				MOV A, R1		; A = i
				MOVC A, @A+DPTR		; A = DB_KEYPAD[A]
				XRL A, R0
				JZ CHECK_INPUT_SUCCESS
				CJNE R1, #9d, CHECK_INPUT_LOOP_INCREMENT
				AJMP CHECK_INPUT_ERROR 
				RET
				
CHECK_INPUT_LOOP_INCREMENT:	INC R1
				AJMP CHECK_INPUT_LOOP_START
				RET
				
CHECK_INPUT_SUCCESS:		CALL DISPLAY
				LJMP CHECK_INPUT 
				RET

CHECK_INPUT_ERROR:		LJMP CHECK_INPUT
				RET
				


DISPLAY: 	 MOV P2, R2	; First block
		 CLR P1.0
		 SETB P1.0
	
		 MOV P2, R3	; Second block
		 CLR P1.1
	  	 SETB P1.1
	
		 MOV P2, R4	; Third block
		 CLR P1.2
		 SETB P1.2
	
		 MOV P2, R5	; Fourth block
		 CLR P1.3
		 SETB P1.3
		 RET

org 300h
DB_DISPLAY:	  DB 11000000b
	  	  DB 11111001b, 10100100b, 10110000b
	          DB 10011001b, 10010010b, 10000010b
	          DB 11111000b, 10000000b, 10010000b
DB_KEYPAD:        DB 10000100b				;    0
		  DB 00010001b, 00010010b, 00010100b	; 1, 2, 3
		  DB 00100001b, 00100010b, 00100100b    ; 4, 5, 6
		  DB 01000001b, 01000010b, 01000100b    ; 7, 8, 9
DB_PW:		  DB 4D, 7D, 1D, 1D
end
